{"version":3,"file":"index-BS2PXh3e.js","sources":["../../src/main.js"],"sourcesContent":["import kaplay from \"kaplay\";\r\nimport \"kaplay/global\"; // uncomment if you want to use without the k. prefix\r\n\r\nconst k = kaplay({ scale: 0.7 });\r\n\r\n// Load assets\r\nk.loadRoot(\"./\");\r\nk.loadSprite(\"bike1\", \"sprites/bike.png\");\r\nk.loadSprite(\"bike2\", \"sprites/bikeGold.png\");\r\nk.loadSprite(\"bike3\", \"sprites/bikeGreen.png\");\r\nk.loadSprite(\"bike4\", \"sprites/bikeRed.png\");\r\n\r\nk.loadSprite(\"head\", \"sprites/head.png\");\r\nk.loadSprite(\"torso\", \"sprites/torso.png\");\r\nk.loadSprite(\"arm\", \"sprites/arm.png\");\r\nk.loadSprite(\"background\", \"sprites/background.jpg\");\r\nk.loadSprite(\"car\", \"sprites/car.png\");\r\nk.loadSprite(\"car2\", \"sprites/car2.png\");\r\nk.loadSprite(\"car3\", \"sprites/car3.png\");\r\nk.loadSprite(\"airship\", \"sprites/airship.png\");\r\nk.loadSprite(\"plane\", \"sprites/plane.png\");\r\n\r\nloadSound(\"menuMusic\", \"sounds/menuMusic.mp3\");\r\nloadSound(\"bikeLoop\", \"sounds/bikeLoop.wav\");\r\nloadSound(\"bikeLoop2\", \"sounds/bikeLoop2.wav\");\r\nloadSound(\"scoreLoop\", \"sounds/scoreLoop.mp3\");\r\nloadSound(\"crash\", \"sounds/crash.mp3\");\r\n\r\nscene(\"menu\", () => {\r\n  let music = play(\"menuMusic\", { loop: true, volume: 0.1 });\r\n  k.add([\r\n    pos(0, 0), // Starting position of first background layer\r\n    rect(k.width(), k.height()), // Replace with your sprite or background\r\n    color(\"#000000\"),\r\n    area(),\r\n  ]);\r\n\r\n  k.add([\r\n    pos(k.width() / 2, k.height() / 4), // Corrected position (center of the screen)\r\n    text(\"Cinder Fall\", { size: 40, color: rgb(255, 255, 255) }),\r\n    layer(\"ui\"), // Place in a UI layer\r\n    {\r\n      anchor: \"center\", // Ensures the text is centered on the given position\r\n    },\r\n  ]);\r\n\r\n  k.add([\r\n    pos(k.width() / 2, k.height() / 3 - 50), // Corrected position (center of the screen)\r\n    text(\"-Score as many points as you can by doing back flips/front flips\", {\r\n      size: 20,\r\n      color: rgb(255, 255, 255),\r\n    }),\r\n    layer(\"ui\"), // Place in a UI layer\r\n    {\r\n      anchor: \"center\", // Ensures the text is centered on the given position\r\n    },\r\n  ]);\r\n  k.add([\r\n    pos(k.width() / 2, k.height() / 3), // Corrected position (center of the screen)\r\n    text(\"- Use the arrow keys (<-) and (->) to accelerate or decelerate\", {\r\n      size: 20,\r\n      color: rgb(255, 255, 255),\r\n    }),\r\n    layer(\"ui\"), // Place in a UI layer\r\n    {\r\n      anchor: \"center\", // Ensures the text is centered on the given position\r\n    },\r\n  ]);\r\n  k.add([\r\n    pos(k.width() / 2, k.height() / 3 + 50), // Corrected position (center of the screen)\r\n    text(\"- Use the (A) and (D) keys to control the tilt of your bike\", {\r\n      size: 20,\r\n      color: rgb(255, 255, 255),\r\n    }),\r\n    layer(\"ui\"), // Place in a UI layer\r\n    {\r\n      anchor: \"center\", // Ensures the text is centered on the given position\r\n    },\r\n  ]);\r\n  k.add([\r\n    pos(k.width() / 2, k.height() / 3 + 100), // Corrected position (center of the screen)\r\n    text(\"- Use (Space Bar) to jump \", {\r\n      size: 20,\r\n      color: rgb(255, 255, 255),\r\n    }),\r\n    layer(\"ui\"), // Place in a UI layer\r\n    {\r\n      anchor: \"center\", // Ensures the text is centered on the given position\r\n    },\r\n  ]);\r\n  k.add([\r\n    pos(k.width() / 2, k.height() / 3 + 150), // Corrected position (center of the screen)\r\n    text(\"- Your speed will effect your rotation\", {\r\n      size: 20,\r\n      color: rgb(255, 255, 255),\r\n    }),\r\n    layer(\"ui\"), // Place in a UI layer\r\n    {\r\n      anchor: \"center\", // Ensures the text is centered on the given position\r\n    },\r\n  ]);\r\n  k.add([\r\n    pos(k.width() / 2, k.height() / 3 + 200), // Corrected position (center of the screen)\r\n    text(\"- Max speed increases gradually over time\", {\r\n      size: 20,\r\n      color: rgb(255, 255, 255),\r\n    }),\r\n    layer(\"ui\"), // Place in a UI layer\r\n    {\r\n      anchor: \"center\", // Ensures the text is centered on the given position\r\n    },\r\n  ]);\r\n  k.add([\r\n    pos(k.width() / 2, k.height() / 3 + 250), // Corrected position (center of the screen)\r\n    text(\"- Have Fun! 🎉😁\", {\r\n      size: 20,\r\n      color: rgb(255, 255, 255),\r\n    }),\r\n    layer(\"ui\"), // Place in a UI layer\r\n    {\r\n      anchor: \"center\", // Ensures the text is centered on the given position\r\n    },\r\n  ]);\r\n\r\n  let startButton = k.add([\r\n    pos(k.width() / 2, k.height() - k.height() / 4),\r\n    // rect(160, 50),\r\n    text(\"Start\"),\r\n    color(\"#ffffff\"),\r\n    area(),\r\n    layer(\"ui\"),\r\n    {\r\n      label: \"Start\",\r\n    },\r\n  ]);\r\n\r\n  // Define the behavior when the button is clicked\r\n  startButton.onClick(() => {\r\n    music.stop();\r\n    go(\"game\"); // Reload the \"game\" scene\r\n  });\r\n});\r\n\r\nscene(\"game\", () => {\r\n  setGravity(200);\r\n\r\n  // Variables\r\n  let jumpForce = 270; // Jumping force\r\n\r\n  let currentSpeed = 0; // Current speed of the bike\r\n  let maxSpeed = 1000; // Maximum speed the bike can reach\r\n\r\n  let rotation = 0; // Variable to store the bike's current rotation\r\n\r\n  let dead = false;\r\n  let onRamp = false;\r\n  let doingOli = false;\r\n  let score = 0;\r\n  let scoreVariable = 0;\r\n  let scoreMultiplier = 0;\r\n\r\n  let bikeLoop = null;\r\n  let bikeLoop2 = null;\r\n  let scoreLoop = null;\r\n\r\n  let background1 = k.add([\r\n    pos(1613, k.height()), // Starting position of first background layer\r\n    sprite(\"background\"),\r\n    color(\"#d6d6d6\"),\r\n    area(),\r\n    \"background1\",\r\n    anchor(\"bot\"), // Set the anchor point to the bottom center\r\n  ]);\r\n\r\n  let background2 = k.add([\r\n    pos(4839, k.height()), // Start second background layer at the right\r\n    sprite(\"background\"),\r\n    color(\"#d6d6d6\"),\r\n    area(),\r\n    \"background2\",\r\n    anchor(\"bot\"), // Set the anchor point to the bottom center\r\n  ]);\r\n\r\n  add([\r\n    pos(0, k.height() - 20),\r\n    rect(k.width(), 20),\r\n    color(\"#6B6B6B\"),\r\n    area(),\r\n    body({ isStatic: true }),\r\n    \"floor\",\r\n  ]);\r\n\r\n  let spriteID = getRandomIntBetween(1, 4);\r\n\r\n  // Create the bike\r\n  let bike = k.add([\r\n    pos(k.width() / 4 + 100, k.height() - 80), // Start above the floor\r\n    sprite(`bike${spriteID}`),\r\n    scale(0.4), // Scale applied after setting origin\r\n    anchor(\"center\"),\r\n    area(),\r\n    body(),\r\n    \"bike\",\r\n  ]);\r\n\r\n  add([\r\n    pos(0, 0),\r\n    rect(300, 80),\r\n    color(rgb(0, 0, 0), 0.5),\r\n    area(),\r\n    body({ isStatic: true }),\r\n    \"floor\",\r\n  ]);\r\n\r\n  let speedText = k.add([\r\n    pos(10, 10), // Position at top-left corner\r\n    text(`Speed : 0`, { size: 27, color: rgb(255, 255, 255) }),\r\n    layer(\"ui\"), // Place in a UI layer\r\n    {\r\n      update: () => {\r\n        // Update the text with the current speed\r\n        speedText.text = `Speed: ${\r\n          currentSpeed < 20 ? 0 : Math.round(currentSpeed / 7)\r\n        } Km/h`;\r\n      },\r\n    },\r\n  ]);\r\n\r\n  let scoreText = k.add([\r\n    pos(10, 45), // Position at top-left corner\r\n    text(\"Score : 0\", { size: 27, color: rgb(255, 255, 255) }),\r\n    layer(\"ui\"), // Place in a UI layer\r\n    {\r\n      update: () => {\r\n        scoreText.text = `Score: ${Math.round(score)}`;\r\n      },\r\n    },\r\n  ]);\r\n\r\n  let scoreVariableText = k.add([\r\n    pos(k.width() / 2 - 100, k.height() / 2 - 80), // Position it in the center\r\n    text(\"\", { size: 40, color: rgb(255, 255, 255), weight: 400 }), // Initial text style\r\n    layer(\"ui\"),\r\n    {\r\n      update: () => {\r\n        // Check if scoreVariable and scoreMultiplier are greater than 0\r\n        if (scoreVariable > 0 && scoreMultiplier > 0) {\r\n          // Update the scoreVariableText based on the multiplier\r\n          scoreVariableText.text = `${Math.round(\r\n            scoreVariable * scoreMultiplier\r\n          )}`;\r\n\r\n          if (scoreMultiplier <= 2) {\r\n            scoreVariableText.color = rgb(255, 255, 255);\r\n          } else if (scoreMultiplier <= 4) {\r\n            scoreVariableText.color = rgb(255, 255, 0);\r\n          } else if (scoreMultiplier <= 6) {\r\n            scoreVariableText.color = rgb(255, 165, 0);\r\n          } else {\r\n            scoreVariableText.color = rgb(255, 0, 0);\r\n          }\r\n        } else {\r\n          scoreVariableText.text = \"\";\r\n        }\r\n      },\r\n    },\r\n  ]);\r\n\r\n  // Function to activate ragdoll effect\r\n  function onDeath() {\r\n    dead = true;\r\n    let music2 = play(\"menuMusic\", { loop: true, volume: 0.1 });\r\n    if (bikeLoop) {\r\n      bikeLoop.stop();\r\n      bikeLoop = null;\r\n    }\r\n    if (bikeLoop2) {\r\n      bikeLoop2.stop();\r\n      bikeLoop2 = null;\r\n    }\r\n    if (scoreLoop) {\r\n      scoreLoop.stop();\r\n      scoreLoop = null;\r\n    }\r\n    if (scoreLoop) {\r\n      scoreLoop.stop();\r\n      scoreLoop = null;\r\n    }\r\n    play(\"crash\", { volume: 0.1 });\r\n\r\n    // Create ragdoll body parts\r\n    let head = k.add([\r\n      pos(bike.pos.x, bike.pos.y - 50), // Position above the bike\r\n      sprite(\"head\"),\r\n      area(),\r\n      body({ restitution: 0.5 }), // Add bounciness to the body part\r\n      scale(0.4),\r\n    ]);\r\n\r\n    let torso = k.add([\r\n      pos(bike.pos.x, bike.pos.y), // Position at the bike's center\r\n      sprite(\"torso\"),\r\n      area(),\r\n      body(),\r\n      scale(0.4),\r\n    ]);\r\n\r\n    let leftArm = k.add([\r\n      pos(bike.pos.x - 100, bike.pos.y + 25), // Position to the left of torso\r\n      sprite(\"arm\"),\r\n      area(),\r\n      body(),\r\n      scale(0.4),\r\n    ]);\r\n\r\n    let rightArm = k.add([\r\n      pos(bike.pos.x + 100, bike.pos.y + 25), // Position to the right of torso\r\n      sprite(\"arm\"),\r\n      area(),\r\n      body(),\r\n      scale(0.4),\r\n    ]);\r\n\r\n    let leftLeg = k.add([\r\n      pos(bike.pos.x - 100, bike.pos.y + 25), // Position to the left of torso\r\n      sprite(\"arm\"),\r\n      area(),\r\n      body(),\r\n      scale(0.4),\r\n    ]);\r\n\r\n    let rightLeg = k.add([\r\n      pos(bike.pos.x + 100, bike.pos.y + 25), // Position to the right of torso\r\n      sprite(\"arm\"),\r\n      area(),\r\n      body(),\r\n      scale(0.4),\r\n    ]);\r\n\r\n    addKaboom(vec2(bike.pos.x, bike.pos.y));\r\n\r\n    applyBounce(head);\r\n    applyBounce(torso);\r\n    applyBounce(leftArm);\r\n    applyBounce(rightArm);\r\n    applyBounce(leftLeg);\r\n    applyBounce(rightLeg);\r\n\r\n    bike.destroy();\r\n    head.vel = vec2(currentSpeed / 4, -(Math.random() * 1000)); // Apply a random velocity\r\n    torso.vel = vec2(currentSpeed / 4 - 60, -(Math.random() * 1000)); // Apply a random velocity\r\n    leftArm.vel = vec2(currentSpeed / 4 - 20, -(Math.random() * 1000)); // Apply a random velocity\r\n    rightArm.vel = vec2(currentSpeed / 4 + 20, -(Math.random() * 1000)); // Apply a random velocity\r\n    leftLeg.vel = vec2(currentSpeed / 4 - 40, -(Math.random() * 1000)); // Apply a random velocity\r\n    rightLeg.vel = vec2(currentSpeed / 4 + 40, -(Math.random() * 1000)); // Apply a random velocity\r\n\r\n    k.add([\r\n      pos(k.width() / 2, k.height() / 2),\r\n      rect(300, 200),\r\n      color(\"#000000\"),\r\n      {\r\n        anchor: \"center\", // Ensures the text is centered on the given position\r\n      },\r\n    ]);\r\n\r\n    // k.add([\r\n    //   pos(k.width() / 2, k.height() / 2 - 70),\r\n    //   text(`Game Over`, {\r\n    //     size: 20,\r\n    //     color: rgb(255, 255, 255),\r\n    //   }),\r\n    //   {\r\n    //     anchor: \"center\", // Ensures the text is centered on the given position\r\n    //   },\r\n    // ]);\r\n\r\n    k.add([\r\n      pos(k.width() / 2, k.height() / 2 - 20), // Starting position of first background layer\r\n      text(`Final ${scoreText.text}`, {\r\n        size: 20,\r\n        color: rgb(255, 255, 255),\r\n      }),\r\n      {\r\n        anchor: \"center\", // Ensures the text is centered on the given position\r\n      },\r\n    ]);\r\n\r\n    k.add([\r\n      pos(k.width() / 2, k.height() / 2 + 10), // Starting position of first background layer\r\n      text(`Top Speed : ${Math.round(currentSpeed / 7)} Km/h`, {\r\n        size: 20,\r\n        color: rgb(255, 255, 255),\r\n      }),\r\n      layer(\"ui\"), // Place in a UI layer\r\n      {\r\n        anchor: \"center\", // Ensures the text is centered on the given position\r\n      },\r\n    ]);\r\n\r\n    const startButton = k.add([\r\n      pos(k.width() / 2, k.height() / 2 + 70), // Starting position of first background layer\r\n      text(\"Start Over\", { size: 24, color: rgb(0, 238, 255) }),\r\n      area(), // Make it interactive\r\n      layer(\"ui\"), // Place in a UI layer\r\n      {\r\n        anchor: \"center\", // Ensures the text is centered on the given position\r\n      },\r\n      \"startButton\",\r\n    ]);\r\n\r\n    // Define the click behavior\r\n    startButton.onClick(() => {\r\n      music2.stop();\r\n      go(\"game\"); // Reload the \"game\" scene\r\n    });\r\n\r\n    currentSpeed = 0;\r\n  }\r\n\r\n  function applyBounce(bodyPart) {\r\n    bodyPart.onCollide(\"floor\", (f) => {\r\n      bodyPart.vel.y = -Math.abs(bodyPart.vel.y) * 0.6; // Simulate bounce with reduced speed\r\n      bodyPart.vel.x *= 0.9; // Slightly reduce horizontal velocity\r\n    });\r\n  }\r\n\r\n  // Update function\r\n  onUpdate(() => {\r\n    if (dead) return;\r\n\r\n    if (bike.isGrounded() && Math.abs(bike.angle) > 90) {\r\n      onDeath();\r\n      return;\r\n    }\r\n\r\n    // Handle background movement\r\n    background1.pos.x -= currentSpeed * dt();\r\n    background2.pos.x -= currentSpeed * dt();\r\n\r\n    // Reset background positions when they go off-screen\r\n    if (background1.pos.x + 1633 < 0) {\r\n      background1.pos.x = background2.pos.x + 3226; // Place background1 after background2\r\n    }\r\n    if (background2.pos.x + 1633 < 0) {\r\n      background2.pos.x = background1.pos.x + 3226; // Place background2 after background1\r\n    }\r\n\r\n    if (bike.pos.x < k.width() / 4 + 100) {\r\n      bike.pos.x += 80 * dt();\r\n    }\r\n\r\n    // Bike movement control\r\n    if (bike.isGrounded()) {\r\n      if (Math.abs(bike.angle) > 10 && !onRamp) {\r\n        if (scoreMultiplier > 1.5) {\r\n          score += scoreVariable * scoreMultiplier;\r\n          scoreVariable = 0;\r\n        }\r\n        doingOli = true;\r\n        scoreVariable += Math.max(currentSpeed / 25, 1) * dt();\r\n        scoreMultiplier = 1.5;\r\n      } else {\r\n        doingOli = false;\r\n        score += scoreVariable * scoreMultiplier;\r\n        scoreMultiplier = 0;\r\n        scoreVariable = 0;\r\n      }\r\n\r\n      if (isKeyDown(\"left\")) {\r\n        if (currentSpeed > 200) {\r\n          currentSpeed = Math.max(currentSpeed - maxSpeed * dt(), -maxSpeed);\r\n        }\r\n      }\r\n\r\n      if (isKeyDown(\"right\")) {\r\n        currentSpeed = Math.min(currentSpeed + (maxSpeed / 3) * dt(), maxSpeed);\r\n      }\r\n\r\n      if (\r\n        !(\r\n          isKeyDown(\"space\") ||\r\n          isKeyDown(\"a\") ||\r\n          isKeyDown(\"right\") ||\r\n          isKeyDown(\"d\")\r\n        )\r\n      ) {\r\n        if (currentSpeed > 200) {\r\n          currentSpeed =\r\n            currentSpeed > 0\r\n              ? currentSpeed - (maxSpeed / 4) * dt()\r\n              : currentSpeed + (maxSpeed / 4) * dt();\r\n        }\r\n      }\r\n\r\n      if (isKeyDown(\"space\")) {\r\n        if (!onRamp) {\r\n          bike.jump(jumpForce);\r\n        }\r\n      }\r\n\r\n      if (!onRamp) rotation = rotation * 0.95; // Smoothly reduce the tilt over time\r\n    } else {\r\n      if (isKeyDown(\"left\")) {\r\n        if (currentSpeed > 200) {\r\n          currentSpeed = Math.max(currentSpeed - maxSpeed * dt(), -maxSpeed);\r\n        }\r\n      }\r\n      if (isKeyDown(\"right\"))\r\n        currentSpeed = Math.min(currentSpeed + (maxSpeed / 5) * dt(), maxSpeed);\r\n\r\n      if (doingOli && bike.pos.y < k.height() - 100) {\r\n        doingOli = false;\r\n        score += scoreVariable * scoreMultiplier;\r\n        scoreMultiplier = 0;\r\n        scoreVariable = 0;\r\n      } else {\r\n        scoreVariable += Math.max(currentSpeed / 25, 1) * dt();\r\n      }\r\n    }\r\n\r\n    if (bike.isGrounded() && isKeyDown(\"right\")) {\r\n      if (!bikeLoop) {\r\n        bikeLoop = play(\"bikeLoop\", { loop: true, volume: 0.1 });\r\n      }\r\n\r\n      if (bikeLoop2) {\r\n        bikeLoop2.stop();\r\n        bikeLoop2 = null;\r\n      }\r\n    }\r\n\r\n    if (bike.pos.y > k.height() - 100 && !isKeyDown(\"right\")) {\r\n      if (bikeLoop) {\r\n        bikeLoop.stop();\r\n        bikeLoop = null;\r\n      }\r\n      if (!bikeLoop2) {\r\n        bikeLoop2 = play(\"bikeLoop2\", { loop: true, volume: 0.1 });\r\n      }\r\n    }\r\n\r\n    if (bike.pos.y < k.height() - 100 && !onRamp) {\r\n      if (bikeLoop) {\r\n        bikeLoop.stop();\r\n        bikeLoop = null;\r\n      }\r\n\r\n      if (!bikeLoop2) {\r\n        bikeLoop2 = play(\"bikeLoop2\", { loop: true, volume: 0.1 });\r\n      }\r\n    }\r\n\r\n    if (isKeyDown(\"a\"))\r\n      rotation -= currentSpeed > 500 ? (currentSpeed / 5) * dt() : 100 * dt(); // Rotate left\r\n    if (isKeyDown(\"d\"))\r\n      rotation += currentSpeed > 500 ? (currentSpeed / 5) * dt() : 100 * dt(); // Rotate left\r\n\r\n    // Wrap rotation angle to avoid it exceeding ±180 degrees\r\n    if (rotation > 180) {\r\n      scoreMultiplier += 1;\r\n      rotation -= 360;\r\n    }\r\n    if (rotation < -180) {\r\n      rotation += 360;\r\n      scoreMultiplier += 1;\r\n    }\r\n\r\n    if (scoreMultiplier > 0 && !scoreLoop) {\r\n      scoreLoop = play(\"scoreLoop\", { loop: true, volume: 0.1 });\r\n    }\r\n    if (scoreMultiplier === 0 && scoreLoop) {\r\n      scoreLoop.stop();\r\n      scoreLoop = null;\r\n    }\r\n\r\n    bike.angle = rotation;\r\n  });\r\n\r\n  bike.onCollide(\"ramp\", (r) => {\r\n    onRamp = true;\r\n  });\r\n\r\n  bike.onCollideEnd(\"ramp\", (r) => {\r\n    onRamp = false;\r\n    bike.jump((r.angleRadius + 1) * jumpForce);\r\n  });\r\n\r\n  loop(15, () => {\r\n    let rampHeight = getRandomIntBetween(100, 600);\r\n    let rampWidth = getRandomIntBetween(500, 800);\r\n    let rampAngle = Math.atan2(rampHeight, rampWidth); // Get the angle in radians\r\n\r\n    k.add([\r\n      pos(k.width() + 500, k.height() - 20), // Position of the ramp\r\n      polygon([\r\n        vec2(-rampWidth, 0), // Bottom left corner\r\n        vec2(0, 0), // Bottom right corner\r\n        vec2(0, -rampHeight), // Peak of the triangle (height of the ramp)\r\n      ]),\r\n      color(\"#969595\"), // Color of the ramp\r\n      area(),\r\n      body({ isStatic: true }),\r\n      \"ramp\",\r\n      \"floor\",\r\n      { angleRadius: rampAngle },\r\n    ]);\r\n  });\r\n\r\n  loop(11, () => {\r\n    if (!dead) {\r\n      // let obstacleType = 5;\r\n      let obstacleType = getRandomIntBetween(1, 5);\r\n\r\n      //play warning sound\r\n      if (obstacleType == 1) {\r\n        k.add([\r\n          pos(k.width() * 2, k.height() - 90),\r\n          sprite(\"car3\"),\r\n          scale(0.55),\r\n          area(),\r\n          body({ isStatic: true }),\r\n          \"obstacle\",\r\n          { speedMultiplier: 0.7 },\r\n        ]);\r\n      } else if (obstacleType == 2) {\r\n        k.add([\r\n          pos(k.width() * 2, k.height() - 80),\r\n          sprite(\"car2\"),\r\n          scale(0.55),\r\n          area(),\r\n          body({ isStatic: true }),\r\n          \"obstacle\",\r\n          { speedMultiplier: 0.5 },\r\n        ]);\r\n      } else if (obstacleType == 3) {\r\n        k.add([\r\n          pos(k.width() * 2, k.height() - 80),\r\n          sprite(\"car\"),\r\n          area(),\r\n          body({ isStatic: true }),\r\n          \"obstacle\",\r\n          { speedMultiplier: 0.3 },\r\n        ]);\r\n      } else if (obstacleType == 4) {\r\n        k.add([\r\n          pos(\r\n            k.width() * 2,\r\n            getRandomIntBetween(k.height() / 4, k.height() - 250)\r\n          ),\r\n          sprite(\"airship\"),\r\n          area(),\r\n          body({ isStatic: true }),\r\n          \"obstacle\",\r\n          { speedMultiplier: 0.7 },\r\n        ]);\r\n      } else if (obstacleType == 5) {\r\n        k.add([\r\n          pos(\r\n            k.width() * 2,\r\n            getRandomIntBetween(k.height() / 4, k.height() - 200)\r\n          ),\r\n          sprite(\"plane\"),\r\n          scale(0.16),\r\n          area(),\r\n          body({ isStatic: true }),\r\n          \"obstacle\",\r\n          { speedMultiplier: 0.5 },\r\n        ]);\r\n      }\r\n    }\r\n  });\r\n\r\n  loop(1, () => {\r\n    if (!dead) {\r\n      maxSpeed += 10;\r\n    }\r\n  });\r\n\r\n  onUpdate(\"ramp\", (ramp) => {\r\n    ramp.pos.x -= currentSpeed * dt();\r\n\r\n    // Prevent the ramp from moving off-screen\r\n    if (ramp.pos.x + ramp.width < 0) {\r\n      destroy(ramp);\r\n    }\r\n\r\n    // Prevent the bike from being pushed off-screen by the ramp\r\n    if (\r\n      bike.pos.x + bike.width > ramp.pos.x &&\r\n      bike.pos.x < ramp.pos.x + ramp.width\r\n    ) {\r\n      bike.pos.x = Math.clamp(\r\n        bike.pos.x,\r\n        ramp.pos.x,\r\n        ramp.pos.x + ramp.width - bike.width\r\n      );\r\n    }\r\n  });\r\n\r\n  onUpdate(\"obstacle\", (obstacle) => {\r\n    obstacle.pos.x -=\r\n      currentSpeed > 600\r\n        ? currentSpeed * obstacle.speedMultiplier * dt()\r\n        : -(300 * obstacle.speedMultiplier * dt());\r\n    if (obstacle.pos.x < 0) {\r\n      destroy(obstacle);\r\n    }\r\n  });\r\n\r\n  bike.onCollide(\"obstacle\", (r) => {\r\n    onDeath();\r\n  });\r\n\r\n  function getRandomIntBetween(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n});\r\n\r\ngo(\"menu\");\r\n"],"names":["k","kaplay","music","jumpForce","currentSpeed","maxSpeed","rotation","dead","onRamp","doingOli","score","scoreVariable","scoreMultiplier","bikeLoop","bikeLoop2","scoreLoop","background1","background2","spriteID","getRandomIntBetween","bike","speedText","scoreText","scoreVariableText","onDeath","music2","head","torso","leftArm","rightArm","leftLeg","rightLeg","applyBounce","bodyPart","r","rampHeight","rampWidth","rampAngle","obstacleType","ramp","obstacle","min","max"],"mappings":"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"}